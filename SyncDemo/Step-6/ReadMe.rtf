{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww18440\viewh5600\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 1) Now let\'92s use all this methods we have created in Step-5 and get some core \'91Core Data\'92\
\
2) - (void)processJSONDataRecordsIntoCoreData\
Remember the comment 2? When the HTTP request operations are completed, returned data is written to Core Data, and your app can then access them as required.\
\
3) We get JSON, we get Core Data. Lets display them.\
\
4) Add notifications in SDDateTableViewController and run the app.\
\
5) Let\'92s refresh the screens. Add refresh button in your controllers.\
\
6) startSync on refresh action. show activity indicator while it\'92s refreshing.\
\
7) - (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary *)change context:(void *)context\
observe changes in SDSyncEngine. Add observer for the known key path in viewDidAppear.\
\
8) - (void)checkSyncStatus\
In viewDidAppear we will check the sync status immediately.\
\
9) That\'92s it. Run the project and see yourself. The work so far we have done can be downloaded from here - https://github.com/sagarpshah/AU_Workshop/releases/download/syncdemo_partial/SyncDemo.zip}