{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww18340\viewh7600\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 1) Let\'92s tell server when we delete something locally.\
\
2) Remember SDObjectDeleted in SDSyncEngine.\
\
3) For fetching (getting) data we use GET request, For adding (posting) data we use POST request. DELETing data.\
\
4) - (NSMutableURLRequest *)DELETERequestForClass:(NSString *)className forObjectWithId:(NSString *)objectId \'97 in SDAFParseAPIClient.\
\
5) Flag object with syncStatus SDObjectDeleted when gets deleted. SDDateTableViewController.m \'97 - (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath\
See Comment 1 where the changes are made.\
\
6) We are no longer just deleting the record from Core Data. In the new model, if the record does NOT have an objectId (meaning it does not exist on the server) the record is immediately deleted as it was before. Otherwise we set the syncStatus to SDObjectDeleted. This is so that the record is still around when it is time to send the request to the server to have it deleted.\
Due to this, the deleted records would still appear in the list. So we have to update SDDateTableViewController to not show records whose syncStatus is set to SDObjectDeleted.\
\
7) - (void)loadRecordsFromCoreData see the Comment 1.\
\
8) So we deleted the object from local, we are also not showing the object with status SDObjectDeleted. However, still parse.com doesn\'92t we have deleted the object.\
\
9) In SDSyncEngine.m \'97 - (void)deleteObjectsOnServer \'97 and call it from postLocalObjectsToServer. Where instead of [self executeSyncCompletedOperations]; we would call [self deleteObjectsOnServer];\
\
10) Congratulations!}