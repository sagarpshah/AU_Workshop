{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww18440\viewh6380\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 1) We have successfully finished the sync process. We need to be aware when syncing is in progress, and when it is not. We have a BOOL to track this, but we need to set it to NO at this point in order to stop sync. We also need to differentiate with \'93initial sync\'94.\
\
2) In SDSyncEngine.m\
NSString * const kSDSyncEngineInitialCompleteKey = @"SDSyncEngineInitialSyncCompleted";\
NSString * const kSDSyncEngineSyncCompletedNotificationName = @"SDSyncEngineSyncCompleted";\
\
3) We will use NSUserDefaults to track \'93initial sync\'94\
- (BOOL)initialSyncComplete\
- (void)setInitialSyncCompleted\
\
4) Earlier we saved the data received from Parse.com in a file. It\'92s in plist format. Where is core data?\
\
5) - (NSDictionary *)JSONDictionaryForClassWithName:(NSString *)className in SDSyncEngine.m\
\
6) - (NSArray *)JSONDataRecordsForClass:(NSString *)className sortedByKey:(NSString *)key - we know the key is - results. Lets sort the array with this \'91key\'92.\
\
7) You read JSON data & you also converted into NSArray. So keeping the same in a file is no use. - (void)deleteJSONDataRecordsForClassWithName:(NSString *)className\
\
8) Now main task. Translate the JSON to NSManagedObjects. First translate it into Objective-C properties. \\\
\
9) Parse dates are like this \'97 \{ "__type": "Date", "iso": "2011-08-21T18:02:52.249Z" \}. Lets convert it into NSDate and then NSString.\
\
10) See dateFormatter, - (void)initializeDateFormatter, - (NSDate *)dateUsingStringFromAPI:(NSString *)dateString & - (NSString *)dateStringForAPIUsingDate:(NSDate *)date\
which initialises dateFormatter, receives an NSString and returns NSDate object & receives NSDate and returns an NSString.\
\
11) Now take a look at - (void)setValue:(id)value forKey:(NSString *)key forManagedObject:(NSManagedObject *)managedObject\
If the key is equal to createdDate or updatedAt, you will be converting them to NSDates. If the key is an NSDictionary you will check the __type key to determine the data type Parse returned. If it is a Date, you will convert the value from an NSString to an NSDate. If it is a File, you will download the file from the URL and set the data in managedObject.\
\
12) Now lets create methods to create or update an NSManagedObject based on a record from the JSON response.\
\
13) - (void)newManagedObjectWithClassName:(NSString *)className forRecord:(NSDictionary *)record\
accepts a className and a record, using this information it will create a new NSManagedObject in the backgroundManagedObjectContext.\
\
14) - (void)updateManagedObject:(NSManagedObject *)managedObject withRecord:(NSDictionary *)record\
accepts an NSManagedObject and a record, using this information it will update the passed NSManagedObject with the record information in the backgroundManagedObjectContext.}