{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 1) Picking (or Peeking) a page!\
\
2) Do similar things as PagedScrollViewController for outlets & connections.\
\
3) Private code.\
\
4) Modification of - (void)viewDidLoad & - (void)viewWillAppear\
\
5) Implementation of private methods & delegate method.\
\
6) Can you see the difference? The addition of the following line of code in loadPage: frame = CGRectInset(frame, 10.0f, 0.0f);\
\
7) Some extra modifications required in Storyboard. Make the scroll view smaller than the screen \'96 lets say 240\'d7312 \'96 and centre it on the screen.\
\
8) Unchecked Clip Subviews for the scroll view. This will allow it to draw outside of its view, which is important for the peeking of pages.\
\
10) Lets touch outside the scrollView area.\
\
11) Let\'92s create a ScrollViewContainer as a subclass of UIView.\
\
12) What it does is to hand control over to the scroll view for any touches that occur within the container view\'92s bounds.\
\
13) Go in storyboard, select our ScrollView then click Editor > Embed In > View.\
\
14) What about detecting tap on UIPageControl. Let\'92s do it as a final step.\
\
15) That\'92s it. The final project can be downloaded from here \'97 https://github.com/sagarpshah/AU_Workshop/releases/download/scrollviews_final/ScrollViews.zip.}